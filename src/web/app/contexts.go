// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=web/design
// --out=$(GOPATH)/src/web
// --version=v1.1.0-dirty
//
// API "autobus-web": Application Contexts
//
// The content of this file is auto-generated, DO NOT MODIFY

package app

import (
	"github.com/goadesign/goa"
	"golang.org/x/net/context"
	"net/http"
)

// ShowGPSContext provides the GPS show action context.
type ShowGPSContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
}

// NewShowGPSContext parses the incoming request URL and body, performs validations and creates the
// context used by the GPS controller show action.
func NewShowGPSContext(ctx context.Context, r *http.Request, service *goa.Service) (*ShowGPSContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := ShowGPSContext{Context: ctx, ResponseData: resp, RequestData: req}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *ShowGPSContext) OK(r []*GpsMedia) error {
	ctx.ResponseData.Header().Set("Content-Type", "text/plain")
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}
